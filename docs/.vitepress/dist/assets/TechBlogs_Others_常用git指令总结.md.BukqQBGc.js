import{_ as i,c as t,o,ae as c}from"./chunks/framework.C8gPwPr5.js";const n=JSON.parse('{"title":"最近工作中经常使用到的git指令","description":"","frontmatter":{},"headers":[],"relativePath":"TechBlogs/Others/常用git指令总结.md","filePath":"TechBlogs/Others/常用git指令总结.md"}'),l={name:"TechBlogs/Others/常用git指令总结.md"};function d(p,e,a,s,g,r){return o(),t("div",null,e[0]||(e[0]=[c('<h1 id="最近工作中经常使用到的git指令" tabindex="-1">最近工作中经常使用到的git指令 <a class="header-anchor" href="#最近工作中经常使用到的git指令" aria-label="Permalink to &quot;最近工作中经常使用到的git指令&quot;">​</a></h1><ul><li><p><code>git add . </code> ： 文件添加到暂存区</p></li><li><p><code>git commit -m &#39;msg&#39;</code> ： 文件推送到本地仓库</p></li><li><p><code>git push origin [分支名称]</code>： 文件推送到远程仓库</p></li><li><p><code>git pull origin [分支名称]</code>： 从远程仓库拉取代码</p></li><li><p><code>git reset --soft HEAD^</code>： 撤销上一次commit</p></li><li><p><code>git branch</code>： 查看所有分支</p></li><li><p><code>git log</code>：查看提交日志 (q退出)</p></li><li><p><code>git stash (save &#39;msg&#39;)</code>： 暂时把还未提交的修改保存起来，一般为了防止与刚拉下来的代码冲突</p></li><li><p><code>git stash pop</code>：恢复暂时保存的修改</p></li><li><p><code>git merge [分支名称] </code>：把目标分支合并到当前分支</p></li><li><p><code>git checkout [分支名称]</code>： 切换分支</p></li><li><p><code>git checkout -b [分支名称]</code> ： 创建并切换分支</p></li><li><p><code>git status</code> ： 查看文件的状态</p></li><li><p><code>git remote -v</code> ： 查看仓库地址</p></li></ul>',2)]))}const h=i(l,[["render",d]]);export{n as __pageData,h as default};
